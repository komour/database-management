<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!-- saved from url=(0063)http://www.kgeorgiy.info/courses/dbms/homeworks.html#homework-1 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>Введение в системы баз данных :: Домашние задания</title><link href="./db-homework_files/main.css" type="text/css" rel="stylesheet"><link rel="shortcut icon" href="http://www.kgeorgiy.info/favicon.ico" type="image/x-icon"><link rel="icon" href="http://www.kgeorgiy.info/favicon.ico" type="image/x-icon"><link href="./db-homework_files/plan.css" type="text/css" rel="stylesheet"><script type="text/javascript" async="" src="./db-homework_files/watch.js"></script><script type="text/javascript" async="" src="./db-homework_files/ga.js"></script><script type="text/javascript">var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-37693764-1"]);_gaq.push(["_setDomainName","kgeorgiy.info"]);_gaq.push(["_trackPageview"]);(function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var b=document.getElementsByTagName("script")[0];b.parentNode.insertBefore(a,b)})();</script></head><body><table id="header"><tbody><tr><td id="breadcrumbs"><a href="http://www.kgeorgiy.info/">ГК</a> / <a href="http://www.kgeorgiy.info/courses/">Материалы курсов</a> / <a href="http://www.kgeorgiy.info/courses/dbms/">Введение в системы баз данных</a> / </td></tr><tr><td id="title">Домашние задания</td></tr></tbody></table><table id="body"><tbody><tr><td id="main"><h3 id="homework-1">Домашнее задание 1. Установка и использование СУБД</h3><ol><li>
            Установите систему управления реляционными базами данных.
        </li><li>
            Узнайте, как в вашей СУБД исполнять SQL в интерактивном режиме.
        </li><li>
            Узнайте, как в вашей СУБД исполнять SQL в пакетном режиме.
        </li><li>
            Разберитесь, как в вашей СУБД осуществляется поддержка русского языка.
        </li><li>
            Создайте базу данных и наполните ее в соответствии с разобранным примерами.
        </li></ol><h3 id="homework-2">Домашнее задание 2. Моделирование БД «Университет»</h3><p>
        Спроектируйте базу данных «Университет»,
        позволяющую хранить информацию о студентах,
        группах, преподавателях, предметах, оценках.
    </p><ol><li>
            Составьте модель сущность-связь.
        </li><li>
            Преобразуйте модель сущность-связь в физическую
            модель.
        </li><li>
            Запишите физическую модель на языке SQL.
            Модель должна включать объявления ограничений.
        </li><li>
            Создайте базу данных по спроектированной модели.
        </li><li>
            Запишите операторы SQL, заполняющие базу тестовыми
            данными.
        </li></ol><p><a href="https://docs.google.com/forms/d/e/1FAIpQLSfmJHHdludVPmJO_0L5RzCuRGCnyv-kg0fQ-gDY9y9dKiTIdQ/viewform">Форма для сдачи ДЗ</a></p><p>В рамках проекта:</p><ol><li>
            Выберите тему проекта, кроме:
            <ul><li>обучение;</li><li>интернет-торговля товарами;</li><li>интернет-торговля билетами;</li></ul></li><li>Сделайте предварительную схему для БД проекта на основе моеделей</li><li><a href="https://docs.google.com/forms/d/e/1FAIpQLSegDvAw4Zq-cQkAMYH1wHWy2sEIUHc0OLZzNRkFsY6W44I1dA/viewform">Форма для тем проектов</a></li></ol><h3 id="homework-3">Домашнее задание 3. Функциональные зависимости в БД «Университет»</h3><p>
        Дано отношение с атрибутами
            <em>StudentId</em>,
            <em>StudentName</em>,
            <em>GroupId</em>,
            <em>GroupName</em>,
            <em>CourseId</em>,
            <em>CourseName</em>,
            <em>LecturerId</em>,
            <em>LecturerName</em>,
            <em>Mark</em>.
    </p><ol><li>
            Найдите функциональные зависимости в данном отношении.
        </li><li>
            Найдите все ключи данного отношения.
        </li><li>
            Найдите замыкание множеств атрибутов:
            <ol type="a"><li><em>GroupId</em>, <em>CourseId</em>;</li><li><em>StudentId</em>, <em>CourseId</em>;</li><li><em>StudentId</em>, <em>LecturerId</em>.</li></ol></li><li>
            Найдите неприводимое множество функциональных зависимостей
            для данного отношения.
        </li></ol><p><a href="https://docs.google.com/forms/d/e/1FAIpQLSdP1tfX7MGUnsio5APxKg9u9JKEZ2_VArnrjqEfbY95c71_gw/viewform">Форма для сдачи ДЗ</a></p><p>В рамках проекта:</p><ol><li>
            Определите набор атрибутов, необходимых для проекта,
            и определите отношение на них.
        </li><li>Найдите функциональные зависимости полученного отношения.</li><li>Найдите все ключи полученного отношения.</li><li>
            Найдите неприводимое множество функциональных зависимостей
            для полученного отношения.
        </li></ol><h3 id="homework-4">Домашнее задание 4. Нормализация БД «Университет»</h3><p>
        Дано отношение с атрибутами
            <em>StudentId</em>,
            <em>StudentName</em>,
            <em>GroupId</em>,
            <em>GroupName</em>,
            <em>CourseId</em>,
            <em>CourseName</em>,
            <em>LecturerId</em>,
            <em>LecturerName</em>,
            <em>Mark</em>.
    </p><ol><li>
            Инкрементально приведите данное отношение в
            пятую нормальную форму.
        </li><li>
            Постройте соответствующую модель сущность-связь.
        </li><li>
            Постройте соответствующую физическую модель.
        </li><li>
            Реализуйте SQL-скрипты, создающие схему базы данных.
        </li><li>
            Создайте базу данных по спроектированной модели.
        </li><li>
            Заполните базу тестовыми данными.
        </li></ol><p><a href="https://docs.google.com/forms/d/e/1FAIpQLScq_YWZWAS0UDaSSzaq-FENR8XJpu9-g21S5mR6xKK-XY7BtA/viewform">Форма для сдачи ДЗ</a></p><p>В рамках проекта:</p><ol><li>Приведите схему базы в пятую нормальную форму.</li><li>Если итоговая схема не будет в НФ-5, то обоснуйте принятое решение.</li></ol><h3 id="homework-5">Домашнее задание 5. Реляционная алгебра</h3><p>
        Структура базы данных «Университет»:
        </p><ul><li><em>Students(StudentId, StudentName, GroupId)</em></li><li><em>Groups(GroupId, GroupName)</em></li><li><em>Courses(CourseId, CourseName)</em></li><li><em>Lecturers(LecturerId, LecturerName)</em></li><li><em>Plan(GroupId, CourseId, LecturerId)</em></li><li><em>Marks(StudentId, CourseId, Mark)</em></li></ul><p></p><p>
        Составьте выражения реляционной алгебры и соответствующие SQL-запросы,
        позволяющие получать:
    </p><ol><li>
            Информацию о студентах (<em>StudentId, StudentName, GroupId</em>)
            <ol><li>С заданным идентификатором (<em>:StudentId</em>);</li><li>С заданным ФИО (<em>:StudentName</em>).</li></ol></li><li>
            Полную информацию о студентах (<em>StudentId, StudentName, GroupName</em>)
            <ol><li>С заданным идентификатором (<em>:StudentId</em>);</li><li>С заданным ФИО (<em>:StudentName</em>).</li></ol></li><li>
            Информацию о студентах с заданной оценкой (<em>:Mark</em>)
            по предмету
            <ol><li>С заданным идентификатором (<em>:CourseId</em>);</li><li>С заданным названием (<em>:CourseName</em>).</li></ol></li><li>
            Информацию о студентах не имеющих оценки по предмету <em>:CourseName</em><ol><li>Среди всех студентов;</li><li>Среди студентов, у которых есть этот предмет.</li></ol></li><li>
            Для каждого студента ФИО и названия предметов
            <ol><li>Которые у него есть по плану;</li><li>Есть, но у него нет оценки;</li><li>Есть, но у него не 4 или 5;</li></ol></li><li>
            Идентификаторы студентов по преподавателю (<em>:LecturerName</em>)
            <ol><li>Имеющих хотя бы одну оценку у преподавателя;</li><li>Не имеющих ни одной оценки у преподавателя;</li><li>Имеющих оценки по всем предметам преподавателя;</li><li>Имеющих оценки по всем предметам преподавателя, которые он вёл у этого студента;</li></ol></li><li>
            Группы и предметы, такие что все студенты группы
            сдали предмет.
            <ol><li>Идентификаторы;</li><li>Названия;</li></ol></li></ol><p>
        Составьте SQL-запросы, позволяющие получать:
    </p><ol start="8"><li>
            Средний балл студента (<em>AvgMark</em>) по проставленным оценкам
            <ol><li>По <em>:StudentId</em></li><li>Для каждого студента (указать <em>StudentName</em>)</li></ol></li><li>
            Средний балл средних баллов (<em>AvgAvgMark</em>)
            студентов каждой группы (<em>GroupName</em>).
        </li><li>
            Для каждого студента (<em>StudentName</em>):
            число предметов, которые у него были (<em>Total</em>),
            число сданных предметов (<em>Passed</em>) и
            число несданных предметов (<em>Failed</em>).
        </li></ol><a href="http://www.kgeorgiy.info/courses/dbms/slides/misc/relations.html">Тестовый полигон</a><p>
        Технические особенности проверки.
    </p><ul><li>Сдача — в PCMS.</li><li>Проверяться и оцениваться будет <b>последняя</b> посланная версия.</li><li>
            Проверка разделена на 4 фазы:
            <ol><li>пустые таблицы (синтаксис и набор столбцов);</li><li>таблицы с неболее чем одной записью;</li><li>таблицы с простыми данными;</li><li>таблицы со сложными данными.</li></ol></li><li>
            В случае проблем с синтаксисом или набором столбцов вы будете получать
            <em>Presentaion Error</em>.
        </li><li>
            Реляционная алгебра проверяется одним тестом на фазу,
            движком из тестового полигона.
        </li><li>
            SQL проверяется тремя тестами на фазу — с разными СУБД.
            Третья СУБД — <a href="https://www.sqlite.org/">SQLite</a>,
            как на тестовом полигоне.
        </li><li>
            Известные спецэффекты:
            <ul style="list-style-type: square"><li>
                    SQLite поддерживает только <code>left join</code>.
                    <code>Right</code>/<code>оuter join</code> делаются через него.
                </li><li>
                    Все вложенные запросы надо именовать, даже если вы не будете
                    использовать это имя:
<pre>    select ... from ... (select ... ) SubQueryName ...
</pre></li><li>
                    Используйте данные из минимально возможного набора таблиц.
                </li></ul></li></ul><h3 id="homework-6">Домашнее задание 6. Реляционное исчисление</h3><p>
       Составьте запросы в терминах языков 
       Datalog и SQL для базы данных «Деканат»,
       позволяющие получать:
    </p><ol><li>
           Информацию о студентах (<em>StudentId, StudentName, GroupId</em>)
           <ol><li>С заданным ФИО (<em>:StudentName</em>);</li><li>Учащихся в заданной группе (<em>:GroupName</em>);</li><li>C заданной оценкой (<em>:Mark</em>) по дисциплине (<em>:CourseName</em>).</li></ol></li><li>
            Полную информацию о студентах (<em>StudentId, StudentName, GroupName</em>)
            <ol><li>Для всех студентов;</li><li>Студентов, не имеющих оценки по предмету <em>:CourseName</em>;</li><li>
                    Студентов, не имеющих оценки по предмету <em>:CourseName</em>,
                    у которых есть этот предмет.
                </li></ol></li><li>
            Студенты и предметы, такие что у студента был предмет
            (по плану или есть оценка)
            <ol><li>Идентификаторы;</li><li>Имя и название.</li></ol></li><li>
            Идентификаторы студентов по преподавателю (<em>:LecturerName</em>)
            <ol><li>Имеющих хотя бы одну оценку у преподавателя;</li><li>Не имеющих ни одной оценки у преподавателя;</li><li>Имеющих оценки по всем предметам преподавателя;</li><li>Имеющих оценки по всем предметам преподавателя, которые он вёл у этого студента.</li></ol></li><li>
            Группы и предметы, такие что все студенты группы сдали предмет.
            <ol><li>Идентификаторы;</li><li>Названия.</li></ol></li></ol><p><b>Примечание.</b> В SQL-запросах нельзя использовать <code>* join</code>.
    </p><h3 id="homework-7">Домашнее задание 7. Изменение данных</h3><p>
        Будем считать, что у студента долг по предмету, если он
        изучает этот предмет и имеет по нему менее 60 баллов.
    </p><ol><li>
            Напишите запросы, удаляющие:
            <ol><li>
                    Студентов, не имеющих долгов;
                </li><li>
                    Студентов, имеющих 3 и более долгов;
                </li><li>
                    Группы, в которых нет студентов.
                </li></ol></li><li>
            Работа с должниками
            <ol><li>
                    Создайте представление <tt>Losers</tt> в котором для каждого
                    студента, имеющего долги указано их количество;
                </li><li>
                    Создайте таблицу <tt>LoserT</tt>, в которой содержится
                    та же информация, что в представлении <tt>Losers</tt>.
                    Эта таблица должна автоматически обновляться при
                    изменении таблицы с баллами;
                </li><li>
                    Отключите автоматическое обновление <tt>LoserT</tt>;
                </li><li>
                    Напишите запрос (один), которой обновляет таблицу
                    <tt>LoserT</tt>, используя данные из таблицы
                    <tt>NewPoints</tt>, в которой содержится информация
                    о баллах, проставленных за последний день.
                </li></ol></li><li>
            Целостность данных
            <ol><li>
                   Добавьте проверку того, что все студенты одной группы
                   изучают один и тот же набор курсов;
               </li><li>
                   Создайте триггер, не позволяющий уменьшить баллы
                   студента по предмету. При попытке такого изменения
                   баллы изменяться не должны.
               </li></ol></li></ol><p><a href="https://docs.google.com/forms/d/e/1FAIpQLSeqDE2F7I9tXXfFHmBfJrmZfdgrEFluP-Gh0X98WOfuFeDi7A/viewform">Форма для сдачи ДЗ</a></p><h3 id="homework-8">Домашнее задание 8. Индексирование</h3><ol><li>
            Определите, какие индексы требуется добавить
            к таблицам базы данных «Деканат» на основе
            запросов из ДЗ-6 и ДЗ-7.
        </li><li>
            Определите три наиболее частых запроса, 
            не входящих в предыдущие ДЗ и индексы, необходимые
            для их поддержки.
        </li><li>
            Пусть частым запросом является определение
            среднего балла студентов группы по дисциплине.
            Какие индексы могут помочь при исполнении
            данного запроса?
        </li></ol><p><a href="https://docs.google.com/forms/d/e/1FAIpQLSe4TZN5Y6lJm824_Ms_nU0tWusYkCPCNWtYYtyPacGOjSHpQw/viewform">Форма для сдачи ДЗ</a></p><h3 id="homework-9">Домашнее задание 9. Хранимые процедуры</h3><p>
        В базе данных <tt>Airline</tt> информация о рейсах
        самолётов задана в виде таблиц
        <tt>Flights(FlightId, FlightTime, PlaneId)</tt>,
        <tt>Seats(PlaneId, SeatNo)</tt>.
    </p><p>
        Реализуйте запросы к базе данных <tt>Airline</tt>
        с применением представлений, хранимых процедур и функций.
    </p><ol><li><tt>FreeSeats(FlightId)</tt>
            — список мест, доступных для продажи и доступных для бронирования.
        </li><li><tt>Reserve(UserId, Pass, FlightId, SeatNo)</tt> —
            пытается забронировать место.
            Возвращает <em>истину</em>, если удалось и
            <em>ложь</em> — в противном случае.
        </li><li><tt>ExtendReservation(UserId, Pass, FlightId, SeatNo)</tt>
            — пытается продлить бронь места.
            Возвращает <em>истину</em>, если удалось и
            <em>ложь</em> — в противном случае.
        </li><li><tt>BuyFree(FlightId, SeatNo)</tt>
            — пытается купить свободное место.
            Возвращает <em>истину</em>, если удалось и
            <em>ложь</em> — в противном случае.
        </li><li><tt>BuyReserved(UserId, Pass, FlightId, SeatNo)</tt>
            — пытается выкупить забронированное место
            (пользователи должны совпадать).
            Возвращает <em>истину</em>, если удалось и
            <em>ложь</em> — в противном случае.
        </li><li><tt>FlightsStatistics(UserId, Pass)</tt>
            — статистика по рейсам: возможность
            бронирования и покупки, число
            свободных, забронированных и проданных мест.
        </li><li><tt>FlightStat(UserId, Pass, FlightId)</tt>
            — статистика по рейсу: возможность
            бронирования и покупки, число
            свободных, забронированных и проданных мест.
        </li><li><tt>CompressSeats(FlightId)</tt>
            — оптимизирует занятость мест в самолете.
            В результате оптимизации, в начале
            самолета должны быть купленные места,
            затем — забронированные, а в конце — свободные.
            Примечание: клиенты, которые уже выкупили
            билеты так же должны быть пересажены.
        </li></ol><p><a href="https://docs.google.com/forms/d/e/1FAIpQLSdHnx4230Iz8k0VlrnnMc7hCezdnjkJh0tRfA9hcpLNh4yk9Q/viewform">Форма для сдачи ДЗ</a></p><h3 id="homework-10">Домашнее задание 10. Транзакции</h3><p>
        Сппланируйте транзакции и выберите их уровни изоляции для
        базы данных <tt>Airline</tt>.
    </p><ol><li>
            Для каждой хранимой процедуры из предыдущего домашнего задания
            выберите минимальный допустимый уровень изоляции транзакций
            (с обоснованием).
        </li><li>
            Реализуйте сценарий работы:
            <ol><li>
                    Запрос списка свободных мест.
                </li><li>
                    Отображеие списка свободных мест пользователю.
                </li><li>
                    Бронирование или покупка места, выбранного пользователем.
                </li></ol></li></ol><p><a href="https://docs.google.com/forms/u/2/d/e/1FAIpQLScHp_rgcp26QNTrdjDYS526vlqIvSQYPP7y2ASLss_07Kkr_Q/viewform">Форма для сдачи ДЗ</a></p></td><td id="sidebar"><div id="sidebar-head"><form method="get" action="https://www.google.com/search"><p><input type="hidden" name="sitesearch" value="kgeorgiy.info"></p><table><tbody><tr><td style="width:100%"><input style="width:100%" type="text" name="q" maxlength="255"></td><td><button type="submit" value="Search"><img alt="Search" src="./db-homework_files/find.png" width="16" height="16"></button></td></tr></tbody></table></form></div><div id="sidebar-body"><h3><a href="http://www.kgeorgiy.info/courses/dbms/homeworks.html#homework-1">Домашнее задание 1. Установка и использование СУБД</a></h3><h3><a href="http://www.kgeorgiy.info/courses/dbms/homeworks.html#homework-2">Домашнее задание 2. Моделирование БД «Университет»</a></h3><h3><a href="http://www.kgeorgiy.info/courses/dbms/homeworks.html#homework-3">Домашнее задание 3. Функциональные зависимости в БД «Университет»</a></h3><h3><a href="http://www.kgeorgiy.info/courses/dbms/homeworks.html#homework-4">Домашнее задание 4. Нормализация БД «Университет»</a></h3><h3><a href="http://www.kgeorgiy.info/courses/dbms/homeworks.html#homework-5">Домашнее задание 5. Реляционная алгебра</a></h3><h3><a href="http://www.kgeorgiy.info/courses/dbms/homeworks.html#homework-6">Домашнее задание 6. Реляционное исчисление</a></h3><h3><a href="http://www.kgeorgiy.info/courses/dbms/homeworks.html#homework-7">Домашнее задание 7. Изменение данных</a></h3><h3><a href="http://www.kgeorgiy.info/courses/dbms/homeworks.html#homework-8">Домашнее задание 8. Индексирование</a></h3><h3><a href="http://www.kgeorgiy.info/courses/dbms/homeworks.html#homework-9">Домашнее задание 9. Хранимые процедуры</a></h3><h3><a href="http://www.kgeorgiy.info/courses/dbms/homeworks.html#homework-10">Домашнее задание 10. Транзакции</a></h3></div><div id="sidebar-foot"><a href="https://validator.w3.org/check?uri=referer"><img src="./db-homework_files/valid-html401" alt="Valid HTML 4.01 Strict" height="31" width="88"></a></div></td></tr></tbody></table><script type="text/javascript">
                (function (d, w, c) {
                    (w[c] = w[c] || []).push(function() {
                        try {
                            w.yaCounter19426939 = new Ya.Metrika({
                                id:19426939,
                                clickmap:true,
                                trackLinks:true,
                                accurateTrackBounce:true,
                                webvisor:true
                            });
                        } catch(e) { }
                    });

                    var n = d.getElementsByTagName("script")[0],
                        s = d.createElement("script"),
                        f = function () { n.parentNode.insertBefore(s, n); };
                    s.type = "text/javascript";
                    s.async = true;
                    s.src = "https://mc.yandex.ru/metrika/watch.js";

                    if (w.opera == "[object Opera]") {
                        d.addEventListener("DOMContentLoaded", f, false);
                    } else { f(); }
                })(document, window, "yandex_metrika_callbacks");
                </script><noscript><div><img src="https://mc.yandex.ru/watch/19426939" style="position:absolute; left:-9999px;" alt=""></div></noscript></body></html>